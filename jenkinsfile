pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = credentials('docker-hub-ahmedben')
        GITHUB_REPO = 'https://github.com/ahmedbenabdelaziz/DevProjOps.git'
        DOCKERHUB_USERNAME = 'ahmedabdelaziz5357580'
        DOCKERHUB_REPO_BACKEND = 'backend-app'
        DOCKERHUB_REPO_FRONTEND = 'mon-flutter-app'
        PROJECT_DIR = 'DevProjOps'
    }

    stages {
        stage('SCM Checkout') {
            steps {
                script {
                    if (!fileExists(PROJECT_DIR)) {
                        echo 'Cloning repository...'
                        bat "git clone -b main ${GITHUB_REPO}"
                    } else {
                        echo 'Le projet existe d√©j√†, mise √† jour...'
                        dir(PROJECT_DIR) {
                            bat "git pull origin main"
                        }
                    }
                }
            }
        }

        stage('Build Docker Images') {
            steps {
                script {
                    dir(PROJECT_DIR) {
                        echo 'Construction des images Docker...'
                        bat "docker build -t ${DOCKERHUB_USERNAME}/${DOCKERHUB_REPO_BACKEND} backend/"
                        bat "docker build -t ${DOCKERHUB_USERNAME}/${DOCKERHUB_REPO_FRONTEND} devopsfrnt/"
                    }
                }
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    echo 'Connexion √† DockerHub...'
                    bat "docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_CREDENTIALS_PSW}"

                    echo 'Push des images...'
                    bat "docker push ${DOCKERHUB_USERNAME}/${DOCKERHUB_REPO_BACKEND}"
                    bat "docker push ${DOCKERHUB_USERNAME}/${DOCKERHUB_REPO_FRONTEND}"
                }
            }
        }
    }

    post {
        success {
            echo 'üöÄ D√©ploiement r√©ussi !'
        }
        failure {
            echo '‚ùå √âchec du pipeline !'
        }
    }
}

